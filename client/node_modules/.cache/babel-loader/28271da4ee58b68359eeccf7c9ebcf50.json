{"ast":null,"code":"var _jsxFileName = \"/Users/txago/Documents/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }\n      }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 5\n        }\n      })), ' ', this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/React.createElement(\"small\", {\n        className: \"form-text text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }\n      }, error);\n    }\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    }, \"Create new stream\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      label: \"Enter title\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      label: \"Enter description\",\n      component: this.renderInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/txago/Documents/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","renderInput","input","label","meta","renderError","error","touched","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAO1CC,WAP0C,GAO5B,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACzC,0BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAO,QAAA,OAAO,EAAEF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBC,KAAxB,CADD,eAEC,+CACKD,KADL;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,SAAS,EAAC,8BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,EAMI,GANJ,EAOE,KAAKG,WAAL,CAAiBD,IAAjB,CAPF,CADD;AAWA,KAnByC;AAAA;;AAC1CC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAqB;AAC/B,QAAIA,OAAO,IAAID,KAAf,EAAsB;AACrB,0BAAO;AAAO,QAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CA,KAA1C,CAAP;AACA;AACD;;AAgBDE,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAEC;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,KAAK,EAAC,aAFP;AAGC,MAAA,SAAS,EAAE,KAAKP,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAMC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,aADN;AAEC,MAAA,KAAK,EAAC,mBAFP;AAGC,MAAA,SAAS,EAAE,KAAKA,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,eAWC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXD,CAFD,CADD,CADD;AAoBA;;AA9CyC;;AAiD3C,MAAMc,QAAQ,GAAIN,UAAD,IAAgB;AAChC,QAAMO,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACP,UAAU,CAACQ,KAAhB,EAAuB;AACtBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACA;;AAED,MAAI,CAACR,UAAU,CAACS,WAAhB,EAA6B;AAC5BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACA;;AAED,SAAOF,MAAP;AACA,CAZD;;AAcA,eAAelB,SAAS,CAAC;AACxBqB,EAAAA,IAAI,EAAE,cADkB;AAExBJ,EAAAA;AAFwB,CAAD,CAAT,CAGZhB,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n\trenderError({ error, touched }) {\n\t\tif (touched && error) {\n\t\t\treturn <small className='form-text text-danger'>{error}</small>;\n\t\t}\n\t}\n\n\trenderInput = ({ input, label, meta }) => {\n\t\treturn (\n\t\t\t<div className='form-group'>\n\t\t\t\t<label htmlFor={input}>{label}</label>\n\t\t\t\t<input\n\t\t\t\t\t{...input}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclassName='form-control form-control-lg'\n\t\t\t\t/>{' '}\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tonSubmit(formValues) {\n\t\tconsole.log(formValues);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='row justify-content-center my-4'>\n\t\t\t\t<div className='col-sm-12 col-md-6'>\n\t\t\t\t\t<h1 className='mb-4'>Create new stream</h1>\n\t\t\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\tlabel='Enter title'\n\t\t\t\t\t\t\tcomponent={this.renderInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\tlabel='Enter description'\n\t\t\t\t\t\t\tcomponent={this.renderInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className='btn btn-primary'>Submit</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.title) {\n\t\terrors.title = 'You must enter a title';\n\t}\n\n\tif (!formValues.description) {\n\t\terrors.description = 'You must enter a description';\n\t}\n\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'streamCreate',\n\tvalidate,\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}