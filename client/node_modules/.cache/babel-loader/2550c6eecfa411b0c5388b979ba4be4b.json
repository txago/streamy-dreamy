{"ast":null,"code":"var _jsxFileName = \"/Users/txago/Documents/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (this.player || !this.props.stream) {\n      return;\n    }\n\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center my-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }\n      }, \"Loading...\"))));\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-12 col-lg-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"embed-responsive embed-responsive-16by9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoRef,\n      controls: true,\n      className: \"embed-responsive-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, description)));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/txago/Documents/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","props","videoRef","createRef","componentDidMount","id","match","params","buildPlayer","componentDidUpdate","componentWillUnmount","player","destroy","stream","createPlayer","type","url","attachMediaElement","current","load","render","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,QAAL,GAAgBR,KAAK,CAACS,SAAN,EAAhB;AACA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;AAEA,SAAKN,KAAL,CAAWJ,WAAX,CAAuBQ,EAAvB;AACA,SAAKG,WAAL;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB,SAAKD,WAAL;AACA;;AAEDE,EAAAA,oBAAoB,GAAG;AACtB,SAAKC,MAAL,CAAYC,OAAZ;AACA;;AAEDJ,EAAAA,WAAW,GAAG;AACb,UAAM;AAAEH,MAAAA;AAAF,QAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAhC;;AAEA,QAAI,KAAKI,MAAL,IAAe,CAAC,KAAKV,KAAL,CAAWY,MAA/B,EAAuC;AACtC;AACA;;AAED,SAAKF,MAAL,GAAchB,GAAG,CAACmB,YAAJ,CAAiB;AAC9BC,MAAAA,IAAI,EAAE,KADwB;AAE9BC,MAAAA,GAAG,EAAG,8BAA6BX,EAAG;AAFR,KAAjB,CAAd;AAIA,SAAKM,MAAL,CAAYM,kBAAZ,CAA+B,KAAKf,QAAL,CAAcgB,OAA7C;AACA,SAAKP,MAAL,CAAYQ,IAAZ;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAI,CAAC,KAAKnB,KAAL,CAAWY,MAAhB,EAAwB;AACvB,0BACC;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CADD,CADD,CADD;AASA;;AAED,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKrB,KAAL,CAAWY,MAA1C;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBQ,KAAtB,CADD,eAEC;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AACC,MAAA,GAAG,EAAE,KAAKnB,QADX;AAEC,MAAA,QAAQ,MAFT;AAGC,MAAA,SAAS,EAAC,uBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFD,eASC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBoB,WAArB,CATD,CADD,CADD;AAeA;;AAnEuC;;AAqEzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO;AAAEZ,IAAAA,MAAM,EAAEW,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACnB,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AACA,CAFD;;AAIA,eAAeT,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.videoRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\n\t\tthis.props.fetchStream(id);\n\t\tthis.buildPlayer();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.buildPlayer();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.player.destroy();\n\t}\n\n\tbuildPlayer() {\n\t\tconst { id } = this.props.match.params;\n\n\t\tif (this.player || !this.props.stream) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.player = flv.createPlayer({\n\t\t\ttype: 'flv',\n\t\t\turl: `http://localhost:8000/live/${id}.flv`,\n\t\t});\n\t\tthis.player.attachMediaElement(this.videoRef.current);\n\t\tthis.player.load();\n\t}\n\n\trender() {\n\t\tif (!this.props.stream) {\n\t\t\treturn (\n\t\t\t\t<div className='row justify-content-center my-4'>\n\t\t\t\t\t<div className='col-sm-12 col-md-6'>\n\t\t\t\t\t\t<div className='spinner-border' role='status'>\n\t\t\t\t\t\t\t<span className='sr-only'>Loading...</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst { title, description } = this.props.stream;\n\n\t\treturn (\n\t\t\t<div className='row justify-content-center my-4'>\n\t\t\t\t<div className='col-sm-12 col-md-12 col-lg-10'>\n\t\t\t\t\t<h1 className='mb-4'>{title}</h1>\n\t\t\t\t\t<div className='embed-responsive embed-responsive-16by9'>\n\t\t\t\t\t\t<video\n\t\t\t\t\t\t\tref={this.videoRef}\n\t\t\t\t\t\t\tcontrols\n\t\t\t\t\t\t\tclassName='embed-responsive-item'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className='my-4'>{description}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n\treturn { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n"]},"metadata":{},"sourceType":"module"}