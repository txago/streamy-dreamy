{"ast":null,"code":"var _jsxFileName = \"/Users/txago/Documents/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }\n    }, \"Create new stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title.';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description.';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/txago/Documents/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAC1CC,QAD0C,GAC9BC,UAAD,IAAgB;AAC1B,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACA,KAHyC;AAAA;;AAK1CE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAEC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,CADD;AAQA;;AAdyC;;AAiB3C,MAAMC,QAAQ,GAAIH,UAAD,IAAgB;AAChC,QAAMI,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACJ,UAAU,CAACK,KAAhB,EAAuB;AACtBD,IAAAA,MAAM,CAACC,KAAP,GAAe,yBAAf;AACA;;AAED,MAAI,CAACL,UAAU,CAACM,WAAhB,EAA6B;AAC5BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,+BAArB;AACA;;AAED,SAAOF,MAAP;AACA,CAZD;;AAcA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC7BC,EAAAA,IAAI,EAAE,cADuB;AAE7BN,EAAAA;AAF6B,CAAD,CAAT,CAGjBN,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCY,WAAhC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n\tonSubmit = (formValues) => {\n\t\tthis.props.createStream(formValues);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='row justify-content-center my-4'>\n\t\t\t\t<div className='col-sm-12 col-md-6'>\n\t\t\t\t\t<h1 className='mb-4'>Create new stream</h1>\n\t\t\t\t\t<StreamForm />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\n\tif (!formValues.title) {\n\t\terrors.title = 'You must enter a title.';\n\t}\n\n\tif (!formValues.description) {\n\t\terrors.description = 'You must enter a description.';\n\t}\n\n\treturn errors;\n};\n\nconst formWrapped = reduxForm({\n\tform: 'streamCreate',\n\tvalidate,\n})(StreamCreate);\n\nexport default connect(null, { createStream })(formWrapped);\n"]},"metadata":{},"sourceType":"module"}